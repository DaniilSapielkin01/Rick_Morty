{"ast":null,"code":"import axios from 'axios';\nimport { URL_PERSONS, SET_PERSONS, IS_LOADING, LOADING_FAIL } from '../constans';\nexport const loadingFail = () => ({\n  type: LOADING_FAIL\n});\nexport const isLoading = () => ({\n  type: IS_LOADING\n});\nexport const setPersons = persons => ({\n  type: SET_PERSONS,\n  payload: persons\n});\nexport const getPersons = () => {\n  return dispatch => {\n    dispatch(isLoading);\n    axios.get(URL_PERSONS).then(({\n      data\n    }) => {\n      dispatch(setPersons(data.results)); // console.log(\"action_person\", data.results)\n    }).catch(error => {\n      dispatch(loadingFail());\n      console.error(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/danil/Documents/RICK_MORTY/rick_morty/src/actions/persons.js"],"names":["axios","URL_PERSONS","SET_PERSONS","IS_LOADING","LOADING_FAIL","loadingFail","type","isLoading","setPersons","persons","payload","getPersons","dispatch","get","then","data","results","catch","error","console"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,UAAnC,EAA+CC,YAA/C,QAAmE,aAAnE;AAEA,OAAO,MAAMC,WAAW,GAAG,OAAO;AAChCC,EAAAA,IAAI,EAAEF;AAD0B,CAAP,CAApB;AAIP,OAAO,MAAMG,SAAS,GAAG,OAAO;AAC9BD,EAAAA,IAAI,EAAEH;AADwB,CAAP,CAAlB;AAIP,OAAO,MAAMK,UAAU,GAAIC,OAAD,KAAc;AACtCH,EAAAA,IAAI,EAAEJ,WADgC;AAEtCQ,EAAAA,OAAO,EAAED;AAF6B,CAAd,CAAnB;AAMP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC9B,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACL,SAAD,CAAR;AACAP,IAAAA,KAAK,CACFa,GADH,CACOZ,WADP,EAEGa,IAFH,CAEQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClBH,MAAAA,QAAQ,CAACJ,UAAU,CAACO,IAAI,CAACC,OAAN,CAAX,CAAR,CADkB,CAElB;AACD,KALH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBN,MAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACAc,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAVH;AAYD,GAdD;AAeD,CAhBM","sourcesContent":["import axios from 'axios'\n\nimport { URL_PERSONS, SET_PERSONS, IS_LOADING, LOADING_FAIL } from '../constans'\n\nexport const loadingFail = () => ({\n  type: LOADING_FAIL\n})\n\nexport const isLoading = () => ({\n  type: IS_LOADING\n})\n\nexport const setPersons = (persons) => ({\n  type: SET_PERSONS,\n  payload: persons\n})\n\n\nexport const getPersons = () => {\n  return dispatch => {\n    dispatch(isLoading)\n    axios\n      .get(URL_PERSONS)\n      .then(({ data }) => {\n        dispatch(setPersons(data.results))\n        // console.log(\"action_person\", data.results)\n      }\n      )\n      .catch((error) => {\n        dispatch(loadingFail())\n        console.error(error)\n      }\n      )\n  }\n}"]},"metadata":{},"sourceType":"module"}